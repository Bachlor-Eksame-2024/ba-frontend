name: CI
on:
  push:
    branches:
      - develop
    paths:
      - 'src/**'
      - 'tests/**'
      - 'package.json'
      - 'package-lock.json'
      - 'vite.config.ts'
      - 'eslint.config.js'
      - 'tsconfig.json'
  pull_request:
    branches:
      - develop
    paths:
      - 'src/**'
      - 'tests/**'
      - 'package.json'
      - 'package-lock.json'
      - 'vite.config.ts'
      - 'eslint.config.js'
      - 'tsconfig.json'
permissions:
  contents: read
  pull-requests: write
  issues: write
jobs:
  verify:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Set Node options
        run: |
          $env:NODE_OPTIONS="--max-old-space-size=4096"
          echo "NODE_OPTIONS=$env:NODE_OPTIONS" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        shell: pwsh

      - name: Clean installation
        run: |
          if (Test-Path node_modules) { Remove-Item -Recurse -Force node_modules }
          if (Test-Path package-lock.json) { Remove-Item -Force package-lock.json }
          npm cache clean --force
        shell: pwsh

      - name: Install dependencies
        run: npm install --legacy-peer-deps --prefer-offline --no-audit
        shell: pwsh

      - name: Run ESLint
        run: npm run lint
        shell: pwsh

      - name: Type check
        run: npm run typecheck
        shell: pwsh

      - name: Run tests
        run: npm run test
        shell: pwsh

      - name: Build
        run: npm run build
        shell: pwsh

      - name: Upload test results
        if: always() && hashFiles('coverage/**/*') != ''
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: coverage/
          retention-days: 30

      - name: Upload build artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: dist/
          retention-days: 7

      - name: Notify on failure
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const run_id = context.runId;
            const run_url = `https://github.com/${owner}/${repo}/actions/runs/${run_id}`;

            if (context.payload.pull_request) {
              await github.rest.issues.createComment({
                owner: owner,
                repo: repo,
                issue_number: context.payload.pull_request.number,
                body: `‚ùå CI failed! [View failure details](${run_url})`
              });
            }
